def projectName = 'thirdfoot-rto'
def langLevel = 1.7

def tomcatVersion = '7.0.11'
def tomcatHome = '/home/lcsontos/devtools/apache-tomcat-7.0.54'

allprojects {
  apply plugin: 'eclipse'
  apply plugin: 'java'
 
  group = 'net.thirdfoot.rto'
  version = '0.1'
}

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.3'
  }
}
 
subprojects {
  apply plugin: 'checkstyle'

  checkstyle {
      ignoreFailures = true
      configFile = rootProject.file('checkstyle.xml')
  }

  sourceCompatibility = langLevel
  targetCompatibility = langLevel

  repositories {
    mavenLocal()
    mavenCentral()

    maven {
      url 'http://xuggle.googlecode.com/svn/trunk/repo/share/java/'
    }

    maven {
      url 'https://oss.sonatype.org/content/repositories/orgpython-1027/'
    }
  }
 
  dependencies {
    testCompile 'junit:junit:4.11'
    testCompile 'org.powermock:powermock-api-mockito:1.5.4'
    testCompile 'org.powermock:powermock-module-junit4:1.5.4'
    testCompile 'org.springframework:spring-context:3.2.9.RELEASE'
    testCompile 'org.springframework:spring-test:3.2.9.RELEASE'
    testCompile 'com.fasterxml.jackson.core:jackson-databind:2.3.3'
  }
}

project(':rto-bootstrap') {
  dependencies {
    compile 'org.mortbay.jetty:servlet-api:3.0.20100224'
  }
}

project(':rto-kernel') {
  dependencies {
    compile 'com.mchange:c3p0:0.9.5-pre8'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
    compile 'org.jodd:jodd-bean:3.5.1'
    compile 'org.jodd:jodd-http:3.5.1'
    compile 'org.jodd:jodd-props:3.5.1'
    compile 'org.mortbay.jetty:servlet-api:3.0.20100224'
    compile 'org.python:jython-standalone:2.7-b3'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.springframework:spring-beans:3.2.9.RELEASE'
    compile 'org.springframework:spring-orm:3.2.9.RELEASE'
    compile 'org.springframework:spring-web:3.2.9.RELEASE'
    compile 'org.springframework:spring-webmvc:3.2.9.RELEASE'
    compile 'xuggle:xuggle-xuggler:5.4'

    runtime 'ch.qos.logback:logback-classic:1.1.2'
    runtime 'com.fasterxml.jackson.core:jackson-core:2.3.3'
    runtime 'com.fasterxml.jackson.core:jackson-databind:2.3.3'
    runtime 'com.h2database:h2:1.4.178'
    runtime 'org.hibernate:hibernate-entitymanager:4.2.12.Final'
    runtime 'org.springframework.data:spring-data-jpa:1.6.0.RELEASE'
    runtime 'org.thymeleaf:thymeleaf:2.1.3.RELEASE'
    runtime 'org.thymeleaf:thymeleaf-spring3:2.1.3.RELEASE'
  }
}
 
project(':rto-service') {
  dependencies {
    compile project(':rto-kernel')

    compile 'org.hibernate:hibernate-core:4.1.7.Final'
  }

  sourceSets {
    main {
      resources {
        srcDirs = ["src/main/resources", "src/main/python"]
      }
    }
  }
}

project(':rto-web') {
  apply plugin: 'war'
  apply plugin: 'tomcat'

  war {
    baseName = projectName
  }
 
  dependencies {
    compile project(':rto-service')

    runtime project(':rto-bootstrap')

    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
      "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
      exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
  }

  task deploy(dependsOn: war) << {
    println "Copy from ${libsDir.getPath()} into ${tomcatHome}/webapps"

    delete "${tomcatHome}/work"
    delete "${tomcatHome}/temp"
    delete "${tomcatHome}/webapps"

    ant.unzip(src: war.archivePath, dest: "${tomcatHome}/webapps/${projectName}")
  }
}
 
eclipse {
  project {
    jdkName = langLevel
    languageLevel = langLevel
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.11'
}
